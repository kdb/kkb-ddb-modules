<?php

/**
 * @file
 * Presents the admin settings, made in kkb_registration to the user.
 */

/**
 * Implements hook_menu().
 */
function kkb_registration_menu() {
  $items['admin/config/ding/kkb_registration'] = [
    'title' => 'Landing-page for user registration',
    'description' => 'Setup the expanded registration landing-page, replacing ding_registration.',
    'page callback' => 'drupal_get_form',
    'page arguments' => ['kkb_registration_admin_form'],
    'access arguments' => ['administer ding provider'],
    'file' => 'kkb_registration.admin.inc',
  ];

  $settings = variable_get('kkb_registration_settings', []);

  $frontend_uri = !empty($settings['uri']) ? $settings['uri'] : 'opretbruger';

  $items[$frontend_uri] = [
    'page callback' => 'kkb_registration_page',
    // Publicly accessible.
    'access callback' => TRUE,
  ];

  return $items;
}

/**
 * Implements hook_theme().
 */
function kkb_registration_theme() {
  return [
    'kkb_registration_page' => [
      'template' => 'templates/kkb-registration-page',
      'variables' => [
        'languages' => [],
      ],
    ]
  ];
}

/**
 * Preparing variables for the kkb_registration frontend page.
 */
function kkb_registration_page() {
  // We have several language-grouped sections of content.
  // The sections is showed on the same page though, as Ding2 doesn't have
  // a split-language setup.
  // Instead, we add a lang="LANG_KEY" to make Google & co understand.
  $languages = [
    'da' => variable_get('kkb_registration_da', NULL),
    'en' => variable_get('kkb_registration_en', NULL),
  ];

  foreach ($languages as $lang_key => $lang_value) {
    $image_style = 'ding_panorama_primary_large';
    $image_fid = !empty($lang_value['image']) ? $lang_value['image'] : NULL;

    if (!empty($image_fid) && ($image_file = file_load($image_fid))) {
      $languages[$lang_key]['image_render'] = theme('image_style', [
        'path' => $image_file->uri,
        'style_name' => $image_style
      ]);
    }
  }

  $variables = [
    'languages' => $languages,
  ];

  return theme('kkb_registration_page', $variables);
}

/**
 * Preprocess function for kkb_contact_page.
 */
function kkb_registration_preprocess_kkb_registration_page(&$variables) {
  drupal_add_js(
    'https://cdnjs.cloudflare.com/ajax/libs/iamdustan-smoothscroll/0.4.0/smoothscroll.min.js',
    [
      'type' => 'external',
    ]
  );

  drupal_add_css(
    drupal_get_path('module', 'kkb_registration') . '/css/kkb_registration.css',
    [
      // We do not want the CSS compressed, as it has path-related references.
      'preprocess' => FALSE,
    ]
  );
}

/**
 * Helper to manually add a single translation string.
 *
 * After adding strings use locale_clear_cache() for clearing caches.
 */
function _kkb_registration_locale_add_translation($source, $langcode, $translation, $context = '', $textgroup = 'default') {
  require_once DRUPAL_ROOT . '/includes/locale.inc';

  $report = &drupal_static(__FUNCTION__, [
    'additions' => 0,
    'updates' => 0,
    'deletes' => 0,
    'skips' => 0,
  ]);

  _locale_import_one_string_db($report, $langcode, $context, $source, $translation, $textgroup, 'Manual import via helper ' . __FUNCTION__ . '().', LOCALE_IMPORT_OVERWRITE);

  // Clear locale cache.
  _locale_invalidate_js();
  cache_clear_all('locale:', 'cache', TRUE);
}
