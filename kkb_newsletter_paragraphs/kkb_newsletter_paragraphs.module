<?php
/**
 * @file
 * Code for the KKB newsletter paragraphs feature.
 */

include_once 'kkb_newsletter_paragraphs.features.inc';

/**
 * Implements hook_theme().
 */
function kkb_newsletter_paragraphs_theme($existing, $type, $theme, $path) {
  $theme = array();
  $theme['paragraphs_item__kkb_newsletter'] = array(
    'render element' => 'elements',
    'base hook' => 'paragraphs_item',
    'template' => 'paragraphs-item--kkb-newsletter',
    'path' => drupal_get_path('module', 'kkb_newsletter_paragraphs') . '/templates',
  );
  $theme['node__newsletter_administration'] = array(
    'render element' => 'content',
    'base hook' => 'node',
    'template' => 'node--newsletter-administration',
    'path' => drupal_get_path('module', 'kkb_newsletter_paragraphs') . '/templates',
  );
  $theme['panels_pane__kkb_newsletter'] = array(
    'render element' => 'content',
    'base hook' => 'node',
    'template' => 'panels-pane--kkb-newsletter',
    'path' => drupal_get_path('module', 'kkb_newsletter_paragraphs') . '/templates',
  );
  return $theme;
}

/**
 * Implements hook_ctools_plugin_directory().
 */
function kkb_newsletter_paragraphs_ctools_plugin_directory($owner, $plugin_type) {
  return 'plugins/' . $plugin_type;
}

/**
 * Define the newsletter paragraph roles.
 */
function kkb_newsletter_paragraphs_secure_permissions_roles() {
  return array(
    'newsletter paragraphs administrator'
  );
}

/**
 * Define site permissions for the newsletter paragraphs.
 */
function kkb_newsletter_paragraphs_secure_permissions($role) {
  $permissions = array(
    'administrators' => array(
      'create newsletter_administration content',
      'edit any newsletter_administration content',
      'delete any newsletter_administration content',
    ),
    'newsletter paragraphs administrator' => array(
      'create newsletter_administration content',
      'edit any newsletter_administration content',
      'delete any newsletter_administration content',
    ),
  );

  if (isset($permissions[$role])) {
    return $permissions[$role];
  }
}

/**
 * Adjust a hex color by amount between 0 and 2.
 *
 * @param $color - The color to adjust.
 * @param $amount - A number between 0 and 2 (meaning; adjust color 0% or 200%).
 *
 * @return string - hex color.
 */
function _adjust_color_brightness($color, $amount) {
  $amount = (float)$amount;
  // Fail silently if user input is not a float between 0 and 2.
  if ($amount < 0 || $amount > 2) {
    return $color;
  }
  // Convert amount to a number between -255 and 255.
  $amount = floor(($amount - 1) * 255);
  if (substr( $color, 0, 1 ) === "#") {
    $color = substr($color, 1);
  }
  // Get new color.
  $color_values = str_split($color, 2);
  $r = min(255, max(0, intval($color_values[0], 16) + $amount));
  $g = min(255, max(0, intval($color_values[1], 16) + $amount));
  $b = min(255, max(0, intval($color_values[2], 16) + $amount));
  // Return hex string.
  return '#'.substr('0'.dechex($r), -2).substr('0'.dechex($g), -2).substr('0'.dechex($b), -2);
}

function kkb_newsletter_paragraphs_preprocess_entity(&$variables) {
  if ($variables['entity_type'] === 'paragraphs_item' &&
      $variables['paragraphs_item']->field_name === 'field_newsletters') {

    $identifier = uniqid('kkb_newsletter--');
    $variables['identifier'] = $identifier;

    $left_background_color = $variables['field_left_background_color'][0]['value'];
    $left_foreground_color = $variables['field_left_foreground_color'][0]['value'];
    $right_foreground_color = $variables['field_right_foreground_color'][0]['value'];
    $submit_text_color = $variables['field_submit_text_color'][0]['value'];

    $variables['image_title'] = '<h3 class="kkb_newsletter_image_caption">' . $variables['field_newsletter_image_title'][0]['value'] . '</h3>';
    $variables['image_title_small'] = '<h3 class="kkb_newsletter_image_caption_small">' . $variables['field_newsletter_image_title'][0]['value'] . '</h3>';

    $variables['title'] = '<h3 class="kkb_newsletter_header">' . $variables['field_newsletter_title'][0]['value'] . '</h3>';
    $variables['short_description'] = '<p class="kbb_newsletter_description kbb_newsletter_short_description">' . $variables['field_newsletter_description'][0]['value'] . '</p>';
    $variables['long_description'] = '<p class="kbb_newsletter_description kbb_newsletter_long_description">' . $variables['field_newsletter_lng_description'][0]['value'] . '</p>';
    $submit_url = $variables['field_newsletter_submit_url'][0]['value'];
    $variables['submit'] = '<a href="' . $submit_url . '" class="kkb_newsletter_submit">' . $variables['field_newsletter_submit'][0]['value'] . '</a>';

    $image_rect_url = image_style_url('newsletter_small_landscape', $variables['field_newsletter_image'][0]['uri']);
    $image_landscape_url = image_style_url('newsletter_landscape', $variables['field_landscape_image'][0]['uri']);

    // Clamp brightness between 0 and 2
    $brightness = max(0, min(2, $variables['field_hover_brightness'][0]['value']));
    $right_foreground_color_adjusted = _adjust_color_brightness($right_foreground_color, $brightness);

    $css = <<<CSS
        /* Switch between rect and landscape images - the paragraph has no knowledge of the its context, so we switch between images this way. */
        .kkb_newsletter {
            display: flex;
            padding: 20px 0;
            min-height: 300px;
        }
        body.page-node .kkb_newsletter {
            max-width: 548px;
        }
        .kkb_newsletter_submit_wrapper {
            width: 100%;
            text-align: center;
            padding-bottom: 15px;
        }
        .kkb_newsletter_content_wrapper {
            background-color: #cfd7d4;
            flex-grow: 1;
            flex-basis: 0;
            padding: 30px;
            display: flex;
            flex-direction: column;
            width: 50%;
        }
        body.page-node .kkb_newsletter_image_wrapper {
            background-image: url($image_rect_url);
        }
        body.page-taxonomy-term .kkb_newsletter_image_wrapper {
            background-image: url($image_landscape_url);
        }
        body.page-node .kbb_newsletter_long_description {
            display: none;
        }
        body.page-taxonomy-term .kbb_newsletter_short_description {
            display: none;
        }
        .kbb_newsletter_description {
            margin-bottom: 50px;
        }
        .kkb_newsletter_image_wrapper {
            background-repeat: no-repeat;
            background-size: contain;
            background-position: bottom;
            flex-grow: 1;
            flex-basis: 0;
            margin: 0;
            padding: 30px;
            width: 50%;
        }
        .kkb_newsletter_submit {
            padding: 12px 36px;
            border-radius: 4px;
        }
        .kkb_newsletter_header, .kkb_newsletter_image_caption, .kkb_newsletter_image_caption_small {
            font-size: 27px;
            line-height: 30px;
            font-weight: 700;
            margin-bottom: 10px;
        }
        .kkb_newsletter_image_caption_small {
            display: none;
        }
        .$identifier .kkb_newsletter_image_wrapper {
            color: $left_foreground_color;
            background-color: $left_background_color;
        }
        .$identifier .kkb_newsletter_header {
            color: $right_foreground_color;
        }
        .$identifier .kkb_newsletter_submit {
            color: $submit_text_color;
            background-color: $right_foreground_color;
        }
        .$identifier .kkb_newsletter_submit:hover {
            background-color: $right_foreground_color_adjusted;
        }
        @media screen and (max-width: 1112px) {
            .kkb_newsletter {
                position: relative;
                width: 100%;
            }
            .$identifier .kkb_newsletter_image_caption_small {
                display: block;
                 color: $right_foreground_color;
            }
            .$identifier .kkb_newsletter_header {
                color: #464646;
                font-size: 17px;
            }
            .kkb_newsletter_image_wrapper {
                display: none;
            }
        }
CSS;

    drupal_add_css($css, array('type' => 'inline'));
  }
}
